#!/bin/bash

# config

# package manager
DNF="yum -q"

# apache package
APACHE=httpd

# cgit package
CGIT=cgit

# markdown package
CGIT=discount

# web root
WEBROOT=/var/www

# apache conf root
CONFROOT=/etc/httpd

# apache main conf file
CONFMAIN="httpd.conf"

# cgit conf file
CONFCGIT="cgitrc"

# assignments github
GIT_ASSIGNMENTS="https://github.com/underground-software/KDLP_assignments"

# website github
GIT_WEBSITE="https://github.com/underground-software/kdlp.underground.software"

# cache list of installed rpms
RPMS=`rpm -qa`

install_if_missing() {
	test -z ${1} && return 1

	echo -e "INSTALL\t${1}"

	if ! echo ${RPMS} | grep ${1} > /dev/null; then
		${DNF} install -y ${1} > /dev/null
	fi
}

remove_if_installed() {
	test -z ${1} && return 1

	echo -e "REMOVE\t${1}"

	if echo ${RPMS} | grep ${1} > /dev/null; then
		${DNF} remove -y ${1} > /dev/null
	fi
}

# Initial deployment
kdlp_install() {
	# Install apache
	install_if_missing ${APACHE}

	# Install cgit
	install_if_missing ${CGIT}

	# Install markdown
	install_if_missing ${MARKDOWN}

	# install configs
	cp ${CONFMAIN} ${CONFROOT}/conf/${CONFMAIN}
	echo -e "COPY\t${CONFMAIN}"

	# install configs
	cp ${CONFCGIT} ${CONFROOT}/../${CONFCGIT}
	echo -e "COPY\t${CONFCGIT}"

	# create git directory
	mkdir /var/www/git

	# make sure git repo directory has correct SELinux settings
	semanage fcontext -a -e /var/lib/git /var/www/git
	restorecon -RF /var/www/git
	echo -e "SELINUX\ttweak"

	# install git repos
	(
	cd ${WEBROOT}/git 
	# entries for thse are in cgitrc

	git clone --bare ${GIT_ASSIGNMENTS}
	printf "GITCLONE\t%s\n" `basename ${GIT_ASSIGNMENTS}`

	git clone --bare ${GIT_WEBSITE}
	printf "GITCLONE\t%s\n" `basename ${GIT_WEBSITE}`
	)

	# deploy the main website
	(
	cd ${WEBROOT}/html
	git clone ${GIT_WEBSITE}
	# v2 branch is the new website
	cd `basename ${GIT_WEBSITE}`
	git checkout v2
	)
	printf "GITDEPLOY\t%s v2\n" `basename ${GIT_WEBSITE}`

	# install markdown generator cgi script
	cp markdown.sh ${WEBROOT}/cgi-bin
	echo -e "INSTALL\tmarkdown.sh"

	# add http to the firewall, keep it permanent
	firewall-cmd --add-service=http >/dev/null
	firewall-cmd --runtime-to-permanent >/dev/null
	echo -e "FWALL\t allow http"

	# start httpd, and start by default on boot
	systemctl enable httpd
	systemctl start httpd
	echo -e "SERVICE\t start httpd"
}

kdlp_remove() {
	# stop httpd, and start by default on boot
	if systemctl --no-pager status httpd; then
		systemctl stop httpd
		echo -e "SERVICE\t stop httpd"
	fi

	# add remove http from the firewall, keep it permanent
	firewall-cmd --remove-service=http >/dev/null
	firewall-cmd --runtime-to-permanent >/dev/null
	echo -e "FWALL\t block http"

	# remove markdown generator cgi script
	if [ -f ${WEBROOT}/cgi-bin/markdown.sh ]; then
		rm ${WEBROOT}/cgi-bin/markdown.sh
	fi
	echo -e "REMOVE\tmarkdown.sh"

	# remove the main website
	(
	cd ${WEBROOT}/html
	if [ -f `basename ${GIT_WEBSITE}` ]; then
		rm -rf `basename ${GIT_WEBSITE}`
	fi
	echo
	)
	printf "REMOVE\t%s\n" `basename ${GIT_WEBSITE}`

	# remove git repos
	rm -rf ${WEBROOT}/git 
	printf "REMOVE\t%s\n" "git repos"

	# don't bother reverting the SELinux stuff
	# and no purpose removing the config files

	# remove markdown
	remove_if_installed ${MARKDOWN}

	# remove cgit
	remove_if_installed ${CGIT}

	# remove apache
	remove_if_installed ${APACHE}
}

kdlp_diff() {
	local any_diffs=""

	CONFMAIN_DIFF=`diff -up ${CONFMAIN} ${CONFROOT}/conf/${CONFMAIN}`

	if [ ! -z ${CONFMAIN_DIFF}]; then
		echo "Saved and deployed main apache configs diverge:"
		echo ${CONFMAIN_DIFF}
		any_diffs=yes
	fi

	CONFCGIT_DIFF=`diff -up ${CONFCGIT} ${CONFROOT}/../${CONFCGIT}`

	if [ ! -z ${CONFCGIT_DIFF}]; then
		echo "Saved and deployed cgit configs diverge:"
		echo ${CONFCGIT_DIFF}
		any_diffs=yes
	fi

	if [ -z $any_diffs ]; then
		echo "Saved and deployed configs in sync"
	fi

}

usage() {
	echo "unknown options, consult the source code"
}

while getopts "ird" OPTION; do
	case ${OPTION} in
		i)
			kdlp_install
			;;
		r)
			kdlp_remove
			;;
		d)
			kdlp_diff
			;;
		*)
			usage
			exit 1
			;;
	esac
done
shift $((OPTIND -1))
